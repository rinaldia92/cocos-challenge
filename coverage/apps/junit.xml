<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="23" failures="1" errors="0" time="9.898">
  <testsuite name="Portfolio Service" errors="0" failures="1" skipped="0" timestamp="2025-06-10T02:40:45" time="3.906" tests="4">
    <testcase classname="Portfolio Service › getPortfolioService" name="should get portfolio with orders" time="0.43">
      <failure>Error: expect(received).toStrictEqual(expected) // deep equality

- Expected  - 7
+ Received  + 7

@@ -8,23 +8,23 @@
        &quot;pnlPercent&quot;: -0.45,
        &quot;quantity&quot;: 40,
        &quot;totalValue&quot;: 37034,
      },
      Object {
-       &quot;currentPrice&quot;: 1502.8,
+       &quot;currentPrice&quot;: 1520.25,
        &quot;instrumentId&quot;: 31,
        &quot;instrumentName&quot;: &quot;Banco Macro S.A.&quot;,
-       &quot;pnlPercent&quot;: -2.42,
+       &quot;pnlPercent&quot;: -1.28,
        &quot;quantity&quot;: -10,
-       &quot;totalValue&quot;: -15028,
+       &quot;totalValue&quot;: -15202.5,
      },
      Object {
-       &quot;currentPrice&quot;: 229.5,
+       &quot;currentPrice&quot;: 232,
        &quot;instrumentId&quot;: 54,
        &quot;instrumentName&quot;: &quot;MetroGAS S.A.&quot;,
-       &quot;pnlPercent&quot;: -8.2,
+       &quot;pnlPercent&quot;: -7.2,
        &quot;quantity&quot;: 500,
-       &quot;totalValue&quot;: 114750,
+       &quot;totalValue&quot;: 116000,
      },
    ],
-   &quot;totalValue&quot;: 889756,
+   &quot;totalValue&quot;: 890831.5,
  }
    at Object.&lt;anonymous&gt; (/home/alan/Documentos/cocos-challenge/tests/services/portfolioService.test.ts:48:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Portfolio Service › getPortfolioService" name="should get portfolio without orders" time="0.396">
    </testcase>
    <testcase classname="Portfolio Service › getPortfolioService" name="should fail because user not found" time="0.408">
    </testcase>
    <testcase classname="Portfolio Service › getPortfolioService" name="should fail because database failed" time="0.407">
    </testcase>
  </testsuite>
  <testsuite name="Portfolio Controller" errors="0" failures="0" skipped="0" timestamp="2025-06-10T02:40:49" time="2.39" tests="4">
    <testcase classname="Portfolio Controller › GET /v1/api/users/:userId/portfolio" name="should get portfolio successfully" time="0.02">
    </testcase>
    <testcase classname="Portfolio Controller › GET /v1/api/users/:userId/portfolio" name="should get portfolio without orders" time="0.004">
    </testcase>
    <testcase classname="Portfolio Controller › GET /v1/api/users/:userId/portfolio" name="should fail for non-existent user" time="0.012">
    </testcase>
    <testcase classname="Portfolio Controller › GET /v1/api/users/:userId/portfolio" name="should fail with invalid schema" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Instruments Controller" errors="0" failures="0" skipped="0" timestamp="2025-06-10T02:40:51" time="1.902" tests="8">
    <testcase classname="Instruments Controller › GET /instruments" name="should first (default) instruments successfully" time="0.006">
    </testcase>
    <testcase classname="Instruments Controller › GET /instruments" name="should get instruments by valid offset and limit" time="0.008">
    </testcase>
    <testcase classname="Instruments Controller › GET /instruments" name="should get 0 instruments by valid limit and offset" time="0.004">
    </testcase>
    <testcase classname="Instruments Controller › GET /instruments" name="should get instruments by valid ticker" time="0.005">
    </testcase>
    <testcase classname="Instruments Controller › GET /instruments" name="should get instruments by valid name" time="0.005">
    </testcase>
    <testcase classname="Instruments Controller › GET /instruments" name="should get instruments by invalid ticker" time="0.005">
    </testcase>
    <testcase classname="Instruments Controller › GET /instruments" name="should fail with database error" time="0.005">
    </testcase>
    <testcase classname="Instruments Controller › GET /instruments" name="should fail with invalid schema" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Instruments Service" errors="0" failures="0" skipped="0" timestamp="2025-06-10T02:40:53" time="1.635" tests="7">
    <testcase classname="Instruments Service › getInstrumentsService" name="should first (default) instruments successfully" time="0.002">
    </testcase>
    <testcase classname="Instruments Service › getInstrumentsService" name="should get instruments by valid offset and limit" time="0.005">
    </testcase>
    <testcase classname="Instruments Service › getInstrumentsService" name="should get 0 instruments by valid limit and offset" time="0.001">
    </testcase>
    <testcase classname="Instruments Service › getInstrumentsService" name="should get instruments by valid ticker" time="0.001">
    </testcase>
    <testcase classname="Instruments Service › getInstrumentsService" name="should get instruments by valid name" time="0">
    </testcase>
    <testcase classname="Instruments Service › getInstrumentsService" name="should get instruments by invalid ticker" time="0.001">
    </testcase>
    <testcase classname="Instruments Service › getInstrumentsService" name="should fail with database error" time="0">
    </testcase>
  </testsuite>
</testsuites>